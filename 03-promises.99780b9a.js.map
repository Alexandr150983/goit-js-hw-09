{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,cAAc,SAASC,iBAAiB,UAAUC,IACzDA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAaC,SAASJ,EAASK,IAAI,UACnCC,EAAYF,SAASJ,EAASK,IAAI,SAClCE,EAASH,SAASJ,EAASK,IAAI,WAErC,IAAIG,EAAeL,EACnB,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCxB,EAAcwB,EAAGD,GACdE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAGhEqB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', event => {\n  event.preventDefault();\n\n  const formData = new FormData(event.target);\n  const firstDelay = parseInt(formData.get('delay'));\n  const delayStep = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  let currentDelay = firstDelay;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += delayStep;\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","formData","FormData","target","firstDelay","parseInt","get","delayStep","amount","currentDelay","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.99780b9a.js.map"}